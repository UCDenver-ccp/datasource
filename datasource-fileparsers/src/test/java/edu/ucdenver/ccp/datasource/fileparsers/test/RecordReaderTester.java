package edu.ucdenver.ccp.datasource.fileparsers.test;

import static org.junit.Assert.assertTrue;

import java.io.File;
import java.io.IOException;

import org.junit.Before;
import org.junit.Test;

import edu.ucdenver.ccp.common.file.FileUtil;
import edu.ucdenver.ccp.common.io.ClassPathUtil;
import edu.ucdenver.ccp.common.test.DefaultTestCase;
import edu.ucdenver.ccp.datasource.fileparsers.RecordReader;

public abstract class RecordReaderTester extends DefaultTestCase {

	protected File sampleInputFile;
	protected File outputDirectory;

	@Before
	public void setUp() throws Exception {
		if (getSampleFileName() != null) {
			sampleInputFile = folder.newFile(getSampleFileName());
			ClassPathUtil.copyClasspathResourceToFile(getClass(), getSampleFileName(), sampleInputFile);
		}

		outputDirectory = FileUtil.appendPathElementsToDirectory(folder.newFolder("flat-files"), "autogenerated",
				"20100101");
		FileUtil.mkdir(outputDirectory);
	}

	protected abstract String getSampleFileName();

	@Test
	public void testIteratorPattern() throws Exception {
		RecordReader<?> recordReader = initSampleRecordReader();
		int expectedRecordCount = 100;
		for (int i = 0; i < expectedRecordCount; i++)
			assertTrue("Repeated calls to parser.hasNext() should not advance the iterator.", recordReader.hasNext());
	}

	protected abstract RecordReader<?> initSampleRecordReader() throws IOException;

}
